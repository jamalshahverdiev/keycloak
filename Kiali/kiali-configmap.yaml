apiVersion: v1
data:
  config.yaml: |
    api:
      namespaces:
        exclude:
        - data.*
        - kube.*
    auth:
      openid:
        client_id: kiali-oauth
        disable_rbac: true
        issuer_uri: http://10.100.100.100:8080/realms/infra
        username_claim: preferred_username
      strategy: openid
    deployment:
      accessible_namespaces:
      - '**'
      additional_service_yaml: {}
      affinity:
        node: {}
        pod: {}
        pod_anti: {}
      configmap_annotations: {}
      custom_secrets: []
      host_aliases: []
      hpa:
        api_version: autoscaling/v2
        spec: {}
      image_digest: ""
      image_name: quay.io/kiali/kiali
      image_pull_policy: Always
      image_pull_secrets: []
      image_version: v1.72.0
      ingress:
        additional_labels: {}
        class_name: nginx
        override_yaml:
          metadata: {}
      ingress_enabled: false
      instance_name: kiali
      logger:
        log_format: text
        log_level: info
        sampler_rate: "1"
        time_field_format: 2006-01-02T15:04:05Z07:00
      namespace: istio-system
      node_selector: {}
      pod_annotations:
        sidecar.istio.io/inject: "true"
      pod_labels:
        team: cloud
      priority_class_name: ""
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 2000Mi
        requests:
          cpu: 30m
          memory: 300Mi
      secret_name: kiali
      security_context: {}
      service_annotations: {}
      service_type: ""
      tolerations:
      - key: opso.tech/arm
        operator: Exists
      version_label: v1.72.0
      view_only_mode: true
    external_services:
      custom_dashboards:
        enabled: true
      grafana:
        url: http://grafana.example.local
      istio:
        component_status:
          components:
          - app_label: istiod
            is_core: true
            is_proxy: false
          - app_label: istio-ingressgateway-private
            is_core: true
            is_proxy: true
            namespace: istio-system
          - app_label: istio-ingressgateway-public
            is_core: true
            is_proxy: true
            namespace: istio-system
          - app_label: egress-gateway
            is_core: false
            is_proxy: true
            namespace: istio-egress-gateway
          enabled: true
        root_namespace: istio-system
        url_service_version: http://istiod.istio-system:15014/version
      prometheus:
        url: http://prometheus.istio-system:9090
      tracing:
        enabled: false
        url: http://jaeger.example.local
    global:
      hub: docker.io/istio
      logAsJson: true
      meshID: vmware
      network: vmware
      proxy:
        excludeIPRanges: 169.254.169.254/32
        holdApplicationUntilProxyStarts: true
        lifecycle:
          postStart:
            exec:
              command:
              - pilot-agent
              - wait
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 10
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 30m
            memory: 128Mi
      proxy_init:
        image: proxyv2
        resources:
          limits:
            cpu: 500m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
      tracer:
        zipkin:
          address: jaeger-es-collector.jaeger-prod.svc.cluster.local:9411
    identity:
      cert_file: ""
      private_key_file: ""
    istio_labels:
      app_label_name: app
      version_label_name: version
    istio_namespace: istio-system
    kiali_feature_flags:
      certificates_information_indicators:
        enabled: true
        secrets:
        - cacerts
        - istio-ca-secret
      clustering:
        autodetect_secrets:
          enabled: true
          label: kiali.io/multiCluster=true
        clusters: []
      disabled_features: []
      ui_defaults:
        metrics_per_refresh: 5m
        refresh_interval: 1m
      validations:
        ignore:
        - KIA1301
    login_token:
      signing_key: jasfhsakjfhlakiwoidyfiuegiuaehf
    server:
      metrics_enabled: true
      metrics_port: 9090
      port: 20001
      web_fqdn: ""
      web_port: "443"
      web_root: /kiali
      web_schema: https
    virtualService:
      enabled: true
      host: kiali.example.local
      oauth: true
kind: ConfigMap
metadata:
  labels:
    app: kiali
    app.kubernetes.io/instance: kiali
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiali
    app.kubernetes.io/part-of: kiali
    app.kubernetes.io/version: v1.72.0
    helm.sh/chart: kiali-1.72.0
    version: v1.72.0
  name: kiali
  namespace: istio-system
